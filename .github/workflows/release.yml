name: Create release
on:
  push:
    tags:
      - 'v*.*.*'
env:
  GO111MODULE: on
  GOARCH: amd64
  GOOS: linux
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Include the license of Go in LICENSE for binary distribution
      run: |
        cat >> LICENSE <<EOS


        The executable includes the Go runtime and the standard library, which are
        distributed under the following license:

        EOS
        curl -s -L https://golang.org/LICENSE?m=text >> LICENSE

    - name: Build the release binary
      run: go build -ldflags '-s -w' -trimpath
      env:
        CGO_ENABLED: 0

    - name: Check the release version
      id: check_version
      run: |
        VERSION=$(basename ${{ github.ref }})
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=prerelease::$(case ${VERSION} in *-*) echo true ;; *) echo false; esac)

    - name: Archive the artifacts
      id: archive
      run: |
        ARCHIVE=golang-actions-practice_${{ steps.check_version.outputs.version }}_${{ env.GOOS }}_${{ env.GOARCH }}.tar.gz
        SHA256SUM=${ARCHIVE%%.tar.gz}.sha256sum
        tar -czf ${ARCHIVE} LICENSE README golang-actions-practice
        sha256sum ${ARCHIVE} > ${SHA256SUM}
        echo ::set-output name=archive::${ARCHIVE}
        echo ::set-output name=sha256sum::${SHA256SUM}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: ${{ steps.check_version.outputs.prerelease }}

    - name: Upload the release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.archive.outputs.archive }}
        asset_name: ${{ steps.archive.outputs.archive }}
        asset_content_type: application/gzip

    - name: Upload sha256sums.txt
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.archive.outputs.sha256sum }}
        asset_name: ${{ steps.archive.outputs.sha256sum }}
        asset_content_type: text/plain
